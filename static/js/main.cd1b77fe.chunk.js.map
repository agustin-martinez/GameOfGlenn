{"version":3,"sources":["components/assets/mini-slottskogen.svg","components/assets/glenn.png","components/assets/mini-glenn.png","components/assets/banner1.svg","components/assets/banner2.svg","components/assets/bannerMedia.svg","components/assets/bannerInfo.svg","components/assets/snake.svg","components/assets/GOG-Banner.svg","components/assets/logo.svg","components/Start.jsx","components/HeaderRedux.jsx","features/characters.js","features/idAdder.js","components/AddCharacter.jsx","components/EditCharacter.jsx","features/editCharacter.js","components/Characters.jsx","components/About.jsx","components/Hufvudstaden.jsx","components/Slottsskogen.jsx","components/Donso.jsx","components/Hisingen.jsx","App.js","serviceWorker.js","features/rootReducer.js","index.js"],"names":["module","exports","Start","className","src","GOG","alt","banner1","bannerMedia","glenn","miniGlenn","banner2","bannerMediaInfo","snake","HeaderRedux","setScreenFromHeader","onClick","logo","addToCharacters","createAction","removeCharacter","editCharacter","actions","increaseStrength","decreaseStrength","reducer","createReducer","id","name","world","backstory","strength","intelligence","state","action","payload","filter","character","map","index","increase","AddCharacter","setShowAddChild","dispatch","useDispatch","idToBeAdded","useSelector","idAdder","useState","valueName","setValueName","valueHomeworld","setValueHomeworld","valueStrength","setValueStrength","valueIntelligence","setValueIntelligence","valueBackstory","setValueBackstory","mess","setCharacter","touchedStrength","setTouchedStrength","touchedIntelligence","setTouchedIntelligence","touchedHomeWorld","setTouchedHomeWorld","touchedName","setTouchedName","handleChangeFormStrength","event","target","value","handleChangeFormIntelligence","console","log","btnDisable","btnDisableName","btnDisableHomeworld","btnDisableStrength","btnDisableIntelligence","isValidLength","l","length","isValidNumber","x","maybeNumber","Number","isNaN","cssClassName","cssClassHomeworld","cssClassIntelligence","cssClassStrength","nameValMess","homeWorldValMess","intelligenceValMess","strengthValMess","backstoryValMess","charactersForm","onSubmit","actionsIdAdder","preventDefault","type","placeholder","onChange","onBlur","disabled","hidden","maxLength","tabIndex","min","max","EditCharacter","valueId","today","Date","time","getHours","getMinutes","getSeconds","onMouseLeave","onFocus","newName","addToEditForm","Characters","charactersData","characters","showAdd","setShowAdd","showEdit","setShowEdit","searchTerm","setSearchTerm","resultList","setResultList","useEffect","maybeAdd","maybeEdit","SearchBar","style","marginBottom","e","person","toLowerCase","includes","outputCharacters","charItem","key","char","actionsEdit","readOnly","spellCheck","About","Hufvudstaden","fromHufvudstaden","setFromHufvudstaden","results","item","pic","Slottsskogen","fromSlottsskogen","setfromSlottsskogen","Donso","fromDonso","setFromDonso","Hisingen","fromHisingen","setFromHisingen","App","currentScreen","setCurrentScreen","content","Boolean","window","location","hostname","match","rootReducer","combineReducers","idAdderReducer","charactersReducer","editCharacterReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd1b77fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mini-slottskogen.e00466f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/glenn.fb0187fd.png\";","module.exports = __webpack_public_path__ + \"static/media/mini-glenn.f245aa67.png\";","module.exports = __webpack_public_path__ + \"static/media/banner1.7fa2f257.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner2.a31fde5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bannerMedia.c7848244.svg\";","module.exports = __webpack_public_path__ + \"static/media/bannerInfo.2c316704.svg\";","module.exports = __webpack_public_path__ + \"static/media/snake.9c645666.svg\";","module.exports = __webpack_public_path__ + \"static/media/GOG-Banner.b78077a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a0ed8285.svg\";","import React from \"react\";\nimport glenn from \"../components/assets/glenn.png\";\nimport miniGlenn from \"../components/assets/mini-glenn.png\";\nimport banner1 from \"../components/assets/banner1.svg\";\nimport banner2 from \"../components/assets/banner2.svg\";\nimport bannerMedia from \"../components/assets/bannerMedia.svg\";\nimport bannerMediaInfo from \"../components/assets/bannerInfo.svg\";\nimport snake from \"../components/assets/snake.svg\";\nimport GOG from \"../components/assets/GOG-Banner.svg\";\nimport \"../App.css\";\nimport \"../popup.css\";\nimport \"../form.css\";\n\nconst Start = () => (\n  <div className=\"App-start\">\n    <div className=\"Map-Box\">\n      <div className=\"Map\"></div>\n    </div>\n    <main className=\"Main-Start\">\n      <div className=\"GOG-Banner\">\n        <img src={GOG} className=\"gog-banner\" alt=\"snake\" />\n      </div>\n      <aside>\n        <div className=\"First-Aside\">\n          <div className=\"Banner\">\n            <img src={banner1} alt=\"\" />\n          </div>\n          <div className=\"BannerMediaInfo\">\n            <img src={bannerMedia} alt=\"\" />\n          </div>\n          <p className=\"Text\">\n          En spännande värld som är uppdelad i fyra olika världar där alla olika världar har unik historia och unika karaktärer. \n          En start för er att bygga vidare ER story, ER karaktärs story och ER världs story. \n          Låt fantasin flöda och låt spelet börja!\n          </p>\n          <div className=\"Glenn\">\n            <img src={glenn} className=\"glenn\" alt=\"glenn\" />\n            <img src={miniGlenn} className=\"Mini-Glenn\" alt=\"mini-glenn\" />\n          </div>\n        </div>\n        <div className=\"Second-Aside\">\n          <div className=\"Banner\">\n            <img src={banner2} alt=\"\" />\n          </div>\n          <div className=\"BannerMediaInfo\">\n            <img src={bannerMediaInfo} alt=\"\" />\n          </div>\n          <p className=\"Text\">\n          De fyra världarna, Hvfudstaden där Glenn den 10:e bor och som är ett centrum för världen, \n          Slottsskogen där visdomen gömmer sig bakom tallar och snår, Donsö där allt är ett med havet, \n          Hisingen där kriminalitet och mörker är täcke över ön.\n          </p>\n          <img src={snake} className=\"Snake\" alt=\"snake\" />\n        </div>\n      </aside>\n    </main>\n  </div>\n);\n\nexport default Start;\n","import React from \"react\";\nimport logo from \"../components/assets/logo.svg\";\nimport \"../App.css\";\n\n\nconst HeaderRedux = ({ setScreenFromHeader }) => {\n  return (\n    <div>\n      <div className=\"Logo-Background\">\n        {\" \"}\n        <img\n          className=\"Logo-Pic\"\n          onClick={() => setScreenFromHeader(\"Home\")}\n          src={logo}\n          alt=\"GAME OF GLENN\"\n        ></img>\n      </div>\n      <header>\n        <ul className=\"Tree-Options\">\n          <li className=\"dropdown\">\n            <div className=\"Button-worlds\">VÄRLDAR</div>\n            <div className=\"dropdown-content\">\n              <div onClick={() => setScreenFromHeader(\"Hufvudstaden\")}>\n                HUFVUDSTADEN\n              </div>\n              <div onClick={() => setScreenFromHeader(\"Slottsskogen\")}>\n                SLOTTSSKOGEN\n              </div>\n              <div onClick={() => setScreenFromHeader(\"Donso\")}>DONSÖ</div>\n              <div onClick={() => setScreenFromHeader(\"Hisingen\")}>\n                HISINGEN\n              </div>\n            </div>\n          </li>\n          <li>\n            <div\n              className=\"Button-characters\"\n              onClick={() => setScreenFromHeader(\"Characters\")}\n            >\n              KARAKTÄRER\n            </div>\n          </li>\n          <li>\n            <div\n              className=\"Button-aboutGOG\"\n              onClick={() => setScreenFromHeader(\"About\")}\n            >\n              OM GOG\n            </div>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n};\n\nexport default HeaderRedux;\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { slotts } from \"../components/assets/mini-slottskogen.svg\";\nimport { hufvudstaden } from \"../components/assets/mini-slottskogen.svg\";\nimport { donsö } from \"../components/assets/mini-slottskogen.svg\";\nimport { hisingen } from \"../components/assets/mini-slottskogen.svg\";\n\nconst addToCharacters = createAction(\"add character to list\");\nconst removeCharacter = createAction(\"remove from characters\");\nconst editCharacter = createAction(\"edit character\");\nconst increaseStrength = createAction(\"increase Strenth\");\nconst decreaseStrength = createAction(\"decrease Strenth\");\n\n// const alredyAdded = createAction('if alredy added');\n\nconst actions = {\n  addToCharacters,\n  removeCharacter,\n  editCharacter,\n  increaseStrength,\n  decreaseStrength,\n};\n\nconst initialState = [\n  {\n    id: 1,\n    name: \"Glenn Den 10:e\",\n    world: \"Hufvudstaden\",\n    backstory:\n      \"Världens konung, ättling till ”Glenn den store”, härskare över de fyra världarna. Korpulent figur med hjärta av guld men vett som ingen vill bli förknippad med.\",\n    strength: 5,\n    intelligence: 3,\n  },\n  {\n    id: 2,\n    name: \"Alf Ensamseglaren\",\n    world: \"Donsö\",\n    backstory:\n      \"Donsöfödd, vi är inte undersåtar, vi är inte slavar. Vi plogar inte fält eller sliter i gruvor. Vi tar vad som är vårt, skärgård som fastland.\",\n    strength: 3,\n    intelligence: 7,\n  },\n  {\n    id: 3,\n    name: \"Mördar Berra\",\n    world: \"Hisingen\",\n    backstory:\n      \"Född och uppvuxen från de mörkaste av platser denna värld skådat. Har en historia få skulle klara av att ta in. ”Easy monkeyboy!\",\n    strength: 8,\n    intelligence: 6,\n  },\n  {\n    id: 4,\n    name: \"Alva Alv\",\n    world: \"Slottsskogen\",\n    backstory:\n      \"I gryningstiden av världen, innan människans ankomst och uppförandet av slott och städer, fanns det bara skogens folk.\",\n    strength: 3,\n    intelligence: 9,\n  },\n  {\n    id: 5,\n    name: \"Gomba\",\n    world: \"Hisingen\",\n    backstory:\n      \"När natten nalkas vaknar Gomba, detta satans väsen. Hans ursinne och kraft är utan motstycke.\",\n    strength: 10,\n    intelligence: 2,\n  },\n  {\n    id: 6,\n    name: \"Bror Köpman\",\n    world: \"Hufvudstaden\",\n    backstory:\n      \"När mjölet sinar i byn väger Bror Köpman pengapungen i sin hand.\",\n    strength: 2,\n    intelligence: 8,\n  },\n  {\n    id: 7,\n    name: \"Blodia \",\n    world: \"Hufvudstaden\",\n    backstory:\n      \"När trollpackan Blodia svävar längs Avenyn vänder både Gomba och Bror Köpman på huvudet.\",\n    strength: 4,\n    intelligence: 7,\n  },\n  {\n    id: 8,\n    name: \"Hånns Dönarn\",\n    world: \"Donsö\",\n    backstory:\n      \"Är du inte med på noterna när du träffar Hånns så smäller det, en riktig träskalle med nävar av järn.\",\n    strength: 9,\n    intelligence: 3,\n  },\n  {\n    id: 9,\n    name: \"Proppen\",\n    world: \"Slottsskogen\",\n    backstory:\n      \"Det går rykten om att han uppfunnet elen ute i Slottsskogen. Självgod och tyken som få.\",\n    strength: 6,\n    intelligence: 8,\n  },\n  {\n    id: 10,\n    name: \"Pöjkvaskern\",\n    world: \"Hufvudstaden\",\n    backstory:\n      \"Ställer till med hyss och sattyg. Snabb, otrevlig, liten. Som en råtta förpestar han Huvfudstaden.\",\n    strength: 1,\n    intelligence: 7,\n  },\n  {\n    id: 11,\n    name: \"Plåstret\",\n    world: \"Donsö\",\n    backstory:\n      \"Har han väl fått span på något eller någon blir du inte av med honom. Snabb i sidled.\",\n    strength: 4,\n    intelligence: 5,\n  },\n  {\n    id: 12,\n    name: \"Gåbben\",\n    world: \"Hisingen\",\n    backstory:\n      \"Sitter och ljuger på hammna, inget är sant men underhållande som få. Bra reflexer.\",\n    strength: 4,\n    intelligence: 7,\n  },\n  {\n    id: 13,\n    name: \"Halta Lötta\",\n    world: \"Slottsskogen\",\n    backstory:\n      \"Låt dig inte luras av hennes trasiga yttre, hennes käpp innehar level 10 magic.\",\n    strength: 7,\n    intelligence: 7,\n  },\n  {\n    id: 14,\n    name: \"Ulla Krabbansikte\",\n    world: \"Donsö\",\n    backstory:\n      \"Fiskardotter som bemästrar sjön som ingen annan. Fångar krabbor med munnen.\",\n    strength: 4,\n    intelligence: 7,\n  },\n  {\n    id: 15,\n    name: \"Beda\",\n    world: \"Donsö\",\n    backstory:\n      \"Riktig gammal och rödden, hennes visdom är magic\",\n    strength: 1,\n    intelligence: 9,\n  },\n  {\n    id: 16,\n    name: \"Ragnar Enstöring\",\n    world: \"Slottsskogen\",\n    backstory:\n      \"Trots sitt namn, fruktansvärt social. En levande paradox. Sällskapssjuk.\",\n    strength: 6,\n    intelligence: 6,\n  },\n\n];\n\nconst reducer = createReducer(initialState, {\n    [addToCharacters]: (state, action) => {\n        return [\n            ...state,\n            action.payload\n        ];\n    },  // addToCart\n\n    [removeCharacter]: (state, action) =>\n    state.filter((character) => character.id !== action.payload),\n\n    [editCharacter]: (state, action) =>\n    state.map((character, index) => {\n        if (character.id === action.payload.id) {\n        return action.payload;\n    } else {\n        return character\n    }\n\n})\n\n// [addToCharacters]: (state, action) => {\n//     let found = state.find(character => character.name === action.payload.name);\n//     if( found ) {\n//         console.log('Readan tillagd')\n//     } else {\n//             return [\n//             ...state,\n//             action.payload\n//         ]\n//     }\n// },\n    \n})\n\nexport { actions, reducer };\n","import { createAction, createReducer } from '@reduxjs/toolkit'\n\nconst increase = createAction('increase') \n\nconst actions = { increase };\n\nconst initialState = 17 ;\n\nconst reducer = createReducer(initialState, {\n    [increase]: (state, action) => state + 1,\n})\n\n\nexport { actions, reducer }","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../features/characters'\nimport { actions as actionsIdAdder} from '../features/idAdder'\nimport '../form.css';\nimport '../popup.css';\nimport \"../App.css\";\n\n\n\nconst AddCharacter = ({setShowAddChild}) => {\nconst dispatch = useDispatch();\nconst idToBeAdded = useSelector(state => state.idAdder)\n\n\n\n//--------------------------------------------------------Persons\nconst [valueName, setValueName] = useState([]);\nconst [valueHomeworld, setValueHomeworld] = useState('');\nconst [valueStrength, setValueStrength] = useState([]);\nconst [valueIntelligence, setValueIntelligence] = useState([]);\nconst [valueBackstory, setValueBackstory] = useState([]);\nconst [character, setCharacter] = useState({mess: 'Ingen karaktär inlagd ännu'})\n\nconst [touchedStrength, setTouchedStrength] = useState(false);\nconst [touchedIntelligence, setTouchedIntelligence] = useState(false);\nconst [touchedHomeWorld, setTouchedHomeWorld] = useState(false);\nconst [touchedName, setTouchedName] = useState(false);\n\n//fav\nconst handleChangeFormName = event => {\n  setValueName(event.target.value);\n};\nconst handleChangeFormHomeworld = event => {\n  setValueHomeworld(event.target.value);\n};\nconst handleChangeFormBackstory = event => {\n  setValueBackstory(event.target.value);\n};\nconst handleChangeFormStrength = event => {\n  setValueStrength(event.target.value);\n};\nconst handleChangeFormIntelligence = event => {\n  setValueIntelligence(event.target.value);\n};\n//-----------------------------------------------\n\nconsole.log(valueBackstory)\n//----------------------------------Validation Person\n\nlet btnDisable = true;\nlet btnDisableName = true;\nlet btnDisableHomeworld = true;\nlet btnDisableStrength = true;\nlet btnDisableIntelligence = true;\n\nconst isValidLength = l => {\n    if  (l.length < 2 || l.length > 17) \n    return false;\n    else \n    return true;\n  }\n\nconst isValidLengthBackstory = l => {\n  if  (l.length === 260) \n  return false;\n  else \n  return true;\n}\n\nconst isValidNumber = x => {\n  let maybeNumber = Number(x);\n    if (x < 1 || x > 10) \n    return false;\n    return !isNaN(maybeNumber)\n}\n//-------------------------------------------------------------\n\nlet cssClassName = '';\nif( touchedName ) {\n  if( isValidLength(valueName) )\n    cssClassName = 'valid';\n  else\n    cssClassName = 'invalid'\n}\n\nlet cssClassHomeworld = '';\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n    cssClassHomeworld = 'valid';\n  else\n    cssClassHomeworld = 'invalid'\n}\n\nlet cssClassIntelligence = '';\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    cssClassIntelligence = 'valid';\n  else\n    cssClassIntelligence = 'invalid'\n}\n\nlet cssClassStrength = '';\nif( touchedStrength ) {\n  if( isValidNumber(valueStrength) )\n    cssClassStrength = 'valid';\n  else\n    cssClassStrength = 'invalid'\n}\n//----------------------------------------\nif( isValidNumber(valueStrength) ) {\ncssClassStrength = 'valid';\n}\n//----------------------------------------\n\nif( touchedName ) {\n  if( isValidLength(valueName) )\n    btnDisableName = false;\n  else\n    btnDisableName = true;\n}\n\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n    btnDisableHomeworld = false;\n  else\n    btnDisableHomeworld = true;\n}\n\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    btnDisableIntelligence = false;\n  else\n    btnDisableIntelligence = true;\n}\n\nif( isValidNumber(valueStrength) ) {\n  btnDisableStrength = false;\n} else {\n  btnDisableStrength = true;\n}\n//------------------------------------------------------\n\n\nif (touchedName && touchedHomeWorld && touchedIntelligence &&\n  !btnDisableName && !btnDisableHomeworld && !btnDisableIntelligence && !btnDisableStrength ) {\n    btnDisable = false;\n} \n//--------------------------------------------------------\n\nlet nameValMess = '';\nif( touchedName ) {\n  if( isValidLength(valueName) )\n  nameValMess = ''\n  else\n  nameValMess = 'Fyll i minst 2 tecken och max 17, tack'\n}\n\nlet homeWorldValMess = '';\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n  homeWorldValMess = ''\n  else\n  homeWorldValMess = 'Vänligen, välj en värld'\n}\n\nlet intelligenceValMess = '';\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    intelligenceValMess = ''\n  else\n    intelligenceValMess = 'Ange ett siffervärde mellan 1-10'\n}\n\nlet strengthValMess = '';\nif( touchedStrength ) {\n  if( isValidNumber(valueStrength) )\n    strengthValMess = ''\n  else\n    strengthValMess = 'Ange ett siffervärde mellan 1-10'\n}\n\nlet backstoryValMess = '';\n  if( isValidLengthBackstory(valueBackstory) ) {\n  backstoryValMess = ''\n  } else {\n  backstoryValMess = 'Maxantalet tecken upnått (260 st)'\n}\n\n  function clearFormsPerson() {\n    setValueName('');\n    setValueHomeworld('');\n    setValueIntelligence('');\n    setValueStrength('');\n    setValueBackstory('')\n    \n    setTouchedHomeWorld(false);\n    setTouchedName(false);\n    setTouchedIntelligence(false)\n    setTouchedStrength(false)\n  }\n\n  const handleSubmit = event => {\n  if (valueName && valueHomeworld && valueBackstory && valueIntelligence && valueStrength && idToBeAdded) {\n    dispatch(actionsIdAdder.increase())\n    dispatch(actions.addToCharacters({\n    id: idToBeAdded, name: valueName, world: valueHomeworld,\n    backstory: valueBackstory, strength: valueStrength, intelligence: valueIntelligence \n  }))\n    setCharacter({name: valueName, mess: ' added to the world ', world: valueHomeworld});\n  }\n\n  clearFormsPerson()\n\n  event.preventDefault();\n};\n\n\n\nconst charactersForm = (\n  <div>\n    <form className=\"flexRowShow\" onSubmit={handleSubmit} id=\"test\">\n    \n    <span className=\"space-for-val\">  <label>Namn</label>  <span>{nameValMess}</span>  </span>\n\n      <input type=\"text\" className={cssClassName} value={valueName} placeholder=\"Fyll i namn\"\n      onChange={handleChangeFormName} onBlur={event => setTouchedName(true)} />\n\n      <span className=\"space-for-val\">  <label>Värld</label>  <span>{homeWorldValMess}</span>  </span>\n      <select value={valueHomeworld} onChange={handleChangeFormHomeworld} onBlur={event => setTouchedHomeWorld(true)}\n      className={cssClassHomeworld}>\n\n        <option value=\"\" disabled hidden>Världar...</option>\n        <option value={'Hufvudstaden'}>Hufvudstaden</option>\n        <option value={'Donsö'}>Donsö</option>\n        <option value={'Slottsskogen'}>Slottsskogen</option>\n        <option value={'Hisingen'}>Hisingen</option>\n      </select>\n\n      <span className=\"space-for-val\">  <label>Backstory(Valfri)</label>  <span>{backstoryValMess}</span>  </span>\n      <textarea value={valueBackstory} onChange={handleChangeFormBackstory} maxLength=\"260\"\n      placeholder=\"(Valfri) Bakgrundsstory, max 260 Tecken\"></textarea>\n\n      <span className=\"space-for-val\">  <label>Intelligens</label>  <span>{intelligenceValMess}</span>  </span>\n      <input type=\"text\" maxLength=\"2\" className={cssClassIntelligence} value={valueIntelligence} placeholder=\"Intelligens 1-10, , skriv in eller använd slider\"\n      onChange={handleChangeFormIntelligence} onBlur={event => setTouchedIntelligence(true)} />\n      <input tabIndex=\"-1\" type=\"range\" min=\"1\" max=\"10\" value={valueIntelligence} className=\"slider\"\n      onChange={handleChangeFormIntelligence} onBlur={event => setTouchedIntelligence(true)}/>\n\n      <span className=\"space-for-val\">  <label>Styrka</label>  <span>{strengthValMess}</span>  </span>\n      <input type=\"text\" maxLength=\"2\" className={cssClassStrength} value={valueStrength} placeholder=\"Styrka 1-10, , skriv in eller använd slider\"\n      onChange={handleChangeFormStrength} onBlur={event => setTouchedStrength(true)} />\n      <input tabIndex=\"-1\" type=\"range\" min=\"1\" max=\"10\" value={valueStrength} className=\"slider\"\n      onChange={handleChangeFormStrength}/>\n\n        \n      <button className=\"btn-add\" disabled={btnDisable} type=\"submit\">Lägg till karaktär</button>\n    </form>\n  </div>\n)\n\nreturn (\n<div className=\"add-popup\">\n  <div className=\"add-popup-content\">\n    <div className=\"add-popup-header\">\n      <span className=\"close\" onClick={() => setShowAddChild(false)}>&times;</span>\n      <h2>L<span className=\"font-add\">Ä</span>gg till karakt<span className=\"font-add\">Ä</span>r</h2>\n    </div>\n      <div className=\"add-popup-body\">\n        {charactersForm}\n      </div>\n        <div className=\"add-popup-footer\">\n          <span className=\"span-col-ora\">{character.name}</span>\n          {character.mess}\n          <span className=\"span-col-ora\">{character.world}</span>\n        </div>\n    </div>\n  </div>\n)\n}\n\nexport default AddCharacter;","import React, { useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions } from '../features/characters'\nimport '../form.css';\nimport '../popup.css';\nimport \"../App.css\";\n\nconst EditCharacter = ({setShowAddChild}) => {\nconst dispatch = useDispatch();\nconst editCharacter = useSelector(state => state.editCharacter)\nconsole.log(editCharacter)\n// useEffect(() => {\n//   console.log(editCharacter[0].character.name)\n// }, [editCharacter]);\n\n//--------------------------------------------------------Persons\nconst [valueName, setValueName] = useState(editCharacter[0].name);\nconst [valueHomeworld, setValueHomeworld] = useState(editCharacter[0].world);\nconst [valueStrength, setValueStrength] = useState([editCharacter[0].strength]);\nconst [valueIntelligence, setValueIntelligence] = useState(editCharacter[0].intelligence);\nconst [valueBackstory, setValueBackstory] = useState([editCharacter[0].backstory]);\nconst valueId = editCharacter[0].id\nconst [character, setCharacter] = useState({mess: 'Karaktären har inte ändrats ännu'})\n\nconst [touchedStrength, setTouchedStrength] = useState(true);\nconst [touchedIntelligence, setTouchedIntelligence] = useState(true);\nconst [touchedHomeWorld, setTouchedHomeWorld] = useState(true);\nconst [touchedName, setTouchedName] = useState(true);\n\n//fav\nconst handleChangeFormName = event => {\n  setValueName(event.target.value);\n};\nconst handleChangeFormHomeworld = event => {\n  setValueHomeworld(event.target.value);\n};\nconst handleChangeFormBackstory = event => {\n  setValueBackstory(event.target.value);\n};\nconst handleChangeFormStrength = event => {\n  setValueStrength(event.target.value);\n};\nconst handleChangeFormIntelligence = event => {\n  setValueIntelligence(event.target.value);\n};\n\n\n//-----------------------------------------------\n\n//----------------------------------Validation Person\n\nlet btnDisable = true;\nlet btnDisableName = true;\nlet btnDisableHomeworld = true;\nlet btnDisableStrength = true;\nlet btnDisableIntelligence = true;\n\nconst isValidLength = l => {\n    if  (l.length < 2 || l.length > 17) \n    return false;\n    else \n    return true;\n  }\n\nconst isValidLengthBackstory = l => {\n  if  (l.length === 260) \n  return false;\n  else \n  return true;\n}\n\nconst isValidNumber = x => {\n  let maybeNumber = Number(x);\n    if (x < 1 || x > 10) \n    return false;\n    return !isNaN(maybeNumber)\n}\n//-------------------------------------------------------------\n\nlet cssClassName = '';\nif( touchedName ) {\n  if( isValidLength(valueName) )\n    cssClassName = 'valid';\n  else\n    cssClassName = 'invalid'\n}\n\nlet cssClassHomeworld = '';\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n    cssClassHomeworld = 'valid';\n  else\n    cssClassHomeworld = 'invalid'\n}\n\nlet cssClassIntelligence = '';\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    cssClassIntelligence = 'valid';\n  else\n    cssClassIntelligence = 'invalid'\n}\n\nlet cssClassStrength = '';\nif( touchedStrength ) {\n  if( isValidNumber(valueStrength) )\n    cssClassStrength = 'valid';\n  else\n    cssClassStrength = 'invalid'\n}\n//----------------------------------------\nif( isValidNumber(valueStrength) ) {\ncssClassStrength = 'valid';\n}\n//----------------------------------------\n\nif( touchedName ) {\n  if( isValidLength(valueName) )\n    btnDisableName = false;\n  else\n    btnDisableName = true;\n}\n\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n    btnDisableHomeworld = false;\n  else\n    btnDisableHomeworld = true;\n}\n\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    btnDisableIntelligence = false;\n  else\n    btnDisableIntelligence = true;\n}\n\nif( isValidNumber(valueStrength) ) {\n  btnDisableStrength = false;\n} else {\n  btnDisableStrength = true;\n}\n//------------------------------------------------------\n\n\nif (touchedName && touchedHomeWorld && touchedIntelligence &&\n  !btnDisableName && !btnDisableHomeworld && !btnDisableIntelligence && !btnDisableStrength ) {\n    btnDisable = false;\n} \n//--------------------------------------------------------\n\nlet nameValMess = '';\nif( touchedName ) {\n  if( isValidLength(valueName) )\n  nameValMess = ''\n  else\n  nameValMess = 'Fyll i minst 2 tecken och max 17, tack'\n}\n\nlet homeWorldValMess = '';\nif( touchedHomeWorld ) {\n  if( isValidLength(valueHomeworld) )\n  homeWorldValMess = ''\n  else\n  homeWorldValMess = 'Vänligen, välj en värld'\n}\n\nlet intelligenceValMess = '';\nif( touchedIntelligence ) {\n  if( isValidNumber(valueIntelligence) )\n    intelligenceValMess = ''\n  else\n    intelligenceValMess = 'Ange ett siffervärde mellan 1-10'\n}\n\nlet strengthValMess = '';\nif( touchedStrength ) {\n  if( isValidNumber(valueStrength) )\n    strengthValMess = ''\n  else\n    strengthValMess = 'Ange ett siffervärde mellan 1-10'\n}\n\nlet backstoryValMess = '';\n  if( isValidLengthBackstory(valueBackstory) ) {\n  backstoryValMess = ''\n  } else {\n  backstoryValMess = 'Maxantalet tecken upnått (260 st)'\n}\n\n  // function clearFormsPerson() {\n  //   setValueName('');\n  //   setValueHomeworld('');\n  //   setValueIntelligence('');\n  //   setValueStrength('');\n  //   setValueBackstory('')\n    \n  //   setTouchedHomeWorld(false);\n  //   setTouchedName(false);\n  //   setTouchedIntelligence(false)\n  //   setTouchedStrength(false)\n  // }\n\n  const handleSubmit = event => {\n  if (valueName && valueHomeworld && valueBackstory && valueIntelligence && valueStrength && valueId) {\n    dispatch(actions.editCharacter({\n    id: valueId, name: valueName, world: valueHomeworld,\n    backstory: valueBackstory, strength: valueStrength, intelligence: valueIntelligence \n  }))\n  let today = new Date();\n  let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      setCharacter({name: valueName, mess: ' uppdaterades klockan: ' + time});\n    \n  }\n\n  // clearFormsPerson()\n\n  event.preventDefault();\n};\n\nconst charactersForm = (\n  <div>\n    <form className=\"flexRowShow\" onSubmit={handleSubmit} id=\"test\">\n          \n      <span className=\"space-for-val\">  <label>Namn</label>  <span>{nameValMess}</span>  </span>\n      \n      <input type=\"text\" className={cssClassName} value={valueName} placeholder=\"Fyll i namn\"\n      onChange={handleChangeFormName} onMouseLeave={event => setTouchedName(true)} onBlur={event => setTouchedName(true)} onFocus={event => setTouchedName(false)}/>\n    \n      <span className=\"space-for-val\">  <label>Värld</label>  <span>{homeWorldValMess}</span>  </span>\n      <select value={valueHomeworld} onChange={handleChangeFormHomeworld} onMouseLeave={event => setTouchedHomeWorld(true)} \n      onBlur={event => setTouchedHomeWorld(true)} onFocus={event => setTouchedHomeWorld(false)}\n      className={cssClassHomeworld}>\n\n        <option value=\"\" disabled hidden>Världar...</option>\n        <option value={'Hufvudstaden'}>Hufvudstaden</option>\n        <option value={'Donsö'}>Donsö</option>\n        <option value={'Slottsskogen'}>Slottsskogen</option>\n        <option value={'Hisingen'}>Hisingen</option>\n      </select>\n\n      <span className=\"space-for-val\">  <label>Backstory(Valfri)</label>  <span>{backstoryValMess}</span>  </span>\n      <textarea value={valueBackstory} onChange={handleChangeFormBackstory} maxLength=\"260\"\n      placeholder=\"(Valfri) Bakgrundsstory, max 260 Tecken\"></textarea>\n\n      <span className=\"space-for-val\">  <label>Intelligens</label>  <span>{intelligenceValMess}</span>  </span>\n      <input type=\"text\" maxLength=\"2\" className={cssClassIntelligence} value={valueIntelligence} placeholder=\"Intelligens 1-10, skriv in eller använd slider\"\n      onChange={handleChangeFormIntelligence} onBlur={event => setTouchedIntelligence(true)} \n      onFocus={event => setTouchedIntelligence(false)} onMouseLeave={event => setTouchedIntelligence(true)}/>\n      <input tabIndex=\"-1\" type=\"range\" min=\"1\" max=\"10\" value={valueIntelligence} className=\"slider\"\n      onChange={handleChangeFormIntelligence} onBlur={event => setTouchedIntelligence(true)} onFocus={event => setTouchedIntelligence(false)} onMouseLeave={event => setTouchedIntelligence(true)}/>\n\n\n      <span className=\"space-for-val\">  <label>Styrka</label>  <span>{strengthValMess}</span>  </span>\n      <input type=\"text\" maxLength=\"2\" className={cssClassStrength} value={valueStrength} placeholder=\"Styrka 1-10, skriv in eller använd slider\"\n      onChange={handleChangeFormStrength} onBlur={event => setTouchedStrength(true)} \n      onFocus={event => setTouchedStrength(false)} onMouseLeave={event => setTouchedStrength(true)}/>\n      <input tabIndex=\"-1\" type=\"range\" min=\"1\" max=\"10\" value={valueStrength} className=\"slider\"\n      onChange={handleChangeFormStrength} onBlur={event => setTouchedStrength(true)} onFocus={event => setTouchedStrength(false)} onMouseLeave={event => setTouchedStrength(true)}/>\n\n\n      <button className=\"btn-add\" disabled={btnDisable} type=\"submit\">Ändra karaktär</button>\n    </form>\n  </div>\n)\n\nreturn (\n<div id=\"myModal\" className=\"add-popup\">\n  <div className=\"add-popup-content\">\n    <div className=\"add-popup-header\">\n      <span className=\"close\" onClick={() => setShowAddChild(false)}>&times;</span>\n      <h2><span className=\"font-add\">Ä</span>ndra karakt<span className=\"font-add\">Ä</span>r</h2>\n    </div>\n      <div className=\"add-popup-body\">\n        {charactersForm}\n      </div>\n        <div className=\"add-popup-footer\">\n          <span className=\"span-col-ora\">{character.name}</span>\n          {character.mess}\n          <span className=\"span-col-ora\">{character.newName}</span>\n        </div>\n    </div>\n  </div>\n)\n}\n\nexport default EditCharacter;","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nconst addToEditForm = createAction('character to edit form');\n\nconst actions = { addToEditForm };\n\nconst initialState = []\n\n\nconst reducer = createReducer(initialState, {\n    [addToEditForm]: (state, action) => {\n            return [\n                state = action.payload\n            ];\n        \n    },  // addToCart\n\n})\n\n\n\n\nexport { actions, reducer }","import React, { useState, useEffect } from \"react\";\nimport AddCharacter from \"../components/AddCharacter\";\nimport EditCharacter from \"../components/EditCharacter\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../features/characters\";\nimport { actions as actionsEdit } from \"../features/editCharacter\";\n// import hufvudstaden from \"../components/assets/hufvudstaden.svg\";\nimport \"../App.css\";\nimport \"../popup.css\";\nimport \"../form.css\";\n\nconst Characters = () => {\n  const dispatch = useDispatch();\n  const charactersData = useSelector((state) => state.characters);\n  const [showAdd, setShowAdd] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n\n  //---------------\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [resultList, setResultList] = useState(charactersData);\n\n  useEffect(() => {\n    setResultList(charactersData);\n  }, [charactersData]);\n\n  const handleChange = (e) => {\n    console.log(charactersData);\n    setSearchTerm(e.target.value);\n    setResultList(\n      charactersData.filter(\n        (person) =>\n          person.name.toLowerCase().includes((e.target.value).toLowerCase())\n      )\n    );\n  };\n  //-------------------\n\n  let maybeAdd = null;\n  if (showAdd) {\n    maybeAdd = <AddCharacter setShowAddChild={setShowAdd} />;\n  }\n  let maybeEdit = null;\n  if (showEdit) {\n    maybeEdit = <EditCharacter setShowAddChild={setShowEdit} />;\n  }\n\n  const handleEdit = (char) => {\n    dispatch(actionsEdit.addToEditForm(char));\n\n    setShowEdit(!showEdit);\n  };\n\n  const SearchBar = (\n    <div className=\"SearchBar\" style={{ marginBottom: \"30px\" }}>\n      <input\n        className=\"character-input\"\n        type=\"text\"\n        placeholder=\"Sök efter karaktärer ...\"\n        name=\"sök karktärer\"\n        value={searchTerm}\n        onChange={handleChange}\n      ></input>\n    </div>\n  );\n\n  const outputCharacters = resultList.map((charItem) => (\n    <div className=\"character-item\" key={charItem.id}>\n      <div className=\"card-content\">\n        <div className=\"name-box\">\n          <div className=\"name\"> {charItem.name} </div>\n          <div className=\"btm-box\">\n            <div className=\"btm-edit-box\">\n              <button\n                className=\"btm-edit\"\n                onClick={() => handleEdit(charItem)}\n              ></button>\n            </div>\n            <div className=\"btm-delete-box\">\n              <button\n                className=\"btm-delete\"\n                onClick={() => dispatch(actions.removeCharacter(charItem.id))}\n              ></button>\n            </div>\n          </div>\n        </div>\n        <div className=\"world\">\n          <div className=\"world-text\"> <span className=\"world-backs-card-col\">VÄRLD: </span>{charItem.world} </div>\n          <div className=\"world-pic\">\n          <img className=\"world-pic-inside\" src={`${charItem.world}.svg`} alt=\"Karta över Hisingen\"></img>\n\t\t\t\t</div>\n        </div>\n        <textarea readOnly spellCheck=\"false\" className=\"backstory\" value={charItem.backstory}></textarea>\n        <div className=\"iq\">INTELLIGENS:</div>\n        <input\n          readOnly\n          type=\"range\"\n          max=\"10\"\n          value={charItem.intelligence}\n        ></input>\n        <div className=\"power\"> STYRKA: </div>\n        <input readOnly type=\"range\" max=\"10\" value={charItem.strength}></input>\n        <div className=\"id\"> ID: {charItem.id} </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div className=\"border\">\n      {SearchBar}\n      <button\n        className=\"btm-add-character\"\n        onClick={() => setShowAdd(!showAdd)}\n      >\n        Lägg till karaktär\n      </button>\n      <div className=\"container\">\n        <div className=\"persons\">{outputCharacters}</div>\n      </div>\n      {maybeAdd}\n      {maybeEdit}\n    </div>\n  );\n};\n\nexport default Characters;\n","import React from \"react\";\nimport \"../App.css\";\nimport \"../popup.css\";\nimport \"../form.css\";\n\nconst About = () => {\n  return (\n    <div className=\"border\">\n    <div className=\"About-Box\">\n      <div className=\"About-GOG\"></div>\n      <div className=\"About-GOG-Media\"></div>\n      <p className=\"Text\">\n        Hela idén med Game of Glenn är att vi har byggt ett skal för ett\n        Rollspel. Tanken är att enkelt komma igång och slippa skapa en helt ny\n        värld från början med karaktärskapande och storyskapande. Vi har byggt\n        en värld åt dig som användare att skapa karaktärer och bygga en\n        rollspels-story. Tanken är att du enkelt kan skapa en karaktär, placera\n        den i något av områdena i världen. Delvis för att det blir enkelt komma\n        ihåg i vilken del av världen din karaktär är i när du återupptar spelet.\n        Men också för att enkelt lägga till nya karaktärer i din story och om du\n        har nya rollspels-kompanjoner som vill vara med. Spela spelet hur ni\n        vill och med vilken story ni vill, HÄR är grunden för er att komma igång\n        och använda er av genom er rollspelsresa.\n      </p>\n    </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport \"../popup.css\";\nimport \"../form.css\";\n\nconst Hufvudstaden = () => {\n  const charactersData = useSelector((state) => state.characters);\n  const [fromHufvudstaden, setFromHufvudstaden] = useState([]);\n\n  useEffect(() => {\n    const results = charactersData.filter((item) =>\n      item.world.includes(\"Hufvudstaden\")\n    );\n    setFromHufvudstaden(results);\n  }, [charactersData]);\n\n  const outputCharacters = fromHufvudstaden.map((charItem) => (\n    <div className=\"character-item\" key={charItem.id}>\n      <div className=\"card-content\">\n        <div className=\"name-box\">\n          <div className=\"name\"> {charItem.name} </div>\n        </div>\n        <div className=\"world\">\n          <div className=\"world-text\">\n            {\" \"}\n            <span className=\"world-backs-card-col\">VÄRLD: </span>\n            {charItem.world}{\" \"}\n          </div>\n          <div className=\"world-pic\"> {charItem.pic} </div>\n        </div>\n        <div className=\"backstory\">\n          {\" \"}\n          <span className=\"world-backs-card-col\">BACKSTORY: </span>\n          {charItem.backstory}{\" \"}\n        </div>\n        <div className=\"iq\">INTELLIGENS:</div>\n\n        <input\n          readOnly\n          type=\"range\"\n          max=\"10\"\n          value={charItem.intelligence}\n        ></input>\n\n        <div className=\"power\"> STYRKA: </div>\n        <input readOnly type=\"range\" max=\"10\" value={charItem.strength}></input>\n        <div className=\"id\"> ID: {charItem.id} </div>\n      </div>\n    </div>\n  ));\n\n  return (\n\n    <div className=\"border\">\n    <h1 className=\"Capital-Name\">Hufvudstaden</h1>\n    <div className=\"Capital-Pic\"></div>\n  <p className=\"Capital-Text\">\nHufvudstaden, världsmetropolen som är belägen i centrum av världen.\n    Glenn den 10:e, kungen av land och rike bor i slottet här. Här kan du\n    alltid hitta köpare, säljare, vandrarhem eller barer. Allt helt enkelt.\n    Vanligt förekommande är att alla heter Glenn här. Beskrivs ofta av\n    utomstående som en stökig stad med oväsen, påhitt och att\n    hufvudstadsborna tror sig vara över alla andra.\n  </p>\n    <div className=\"container\">\n      <div className=\"persons\">{outputCharacters}</div>\n    </div>\n\n  </div>\n\n  );\n};\n\nexport default Hufvudstaden;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../App.css\";\nimport \"../popup.css\";\nimport \"../form.css\";\n\nconst Slottsskogen = () => {\n  const charactersData = useSelector((state) => state.characters);\n  const [fromSlottsskogen, setfromSlottsskogen] = useState([]);\n\n  useEffect(() => {\n    const results = charactersData.filter((item) =>\n      item.world.includes(\"Slottsskogen\")\n    );\n    setfromSlottsskogen(results);\n  }, [charactersData]);\n\n  const outputCharacters = fromSlottsskogen.map((charItem) => (\n    <div className=\"character-item\" key={charItem.id}>\n      <div className=\"card-content\">\n        <div className=\"name-box\">\n          <div className=\"name\"> {charItem.name} </div>\n        </div>\n        <div className=\"world\">\n          <div className=\"world-text\">\n            {\" \"}\n            <span className=\"world-backs-card-col\">VÄRLD: </span>\n            {charItem.world}{\" \"}\n          </div>\n          <div className=\"world-pic\"> {charItem.pic} </div>\n        </div>\n        <div className=\"backstory\">\n          {\" \"}\n          <span className=\"world-backs-card-col\">BACKSTORY: </span>\n          {charItem.backstory}{\" \"}\n        </div>\n        <div className=\"iq\">INTELLIGENS:</div>\n\n        <input\n          readOnly\n          type=\"range\"\n          max=\"10\"\n          value={charItem.intelligence}\n        ></input>\n\n        <div className=\"power\"> STYRKA: </div>\n        <input readOnly type=\"range\" max=\"10\" value={charItem.strength}></input>\n        <div className=\"id\"> ID: {charItem.id} </div>\n      </div>\n    </div>\n  ));\n\n  return (\n\n      <div className=\"border\">\n        <h1 className=\"Capital-Name\">Slottsskogen</h1>\n        <div className=\"Capital-Pic\"></div>\n      <p className=\"Capital-Text\">\n  Den stora uppslukande skogen öster om Hufvudstaden, där det är svårt att skilja på dag och natt då delar av skogen har träd som når sällan kådade höjder,\n och snårighet som omintetgör alla möjligheter att återse solens sken. \n Slottsskogsbon är en finurlig varelse som älskar det social och har lätt till skratt. \n Visdomen från de äldre går inte att hitta i någon annan del av världen.\n      </p>\n        <div className=\"container\">\n          <div className=\"persons\">{outputCharacters}</div>\n        </div>\n \n      </div>\n\n  );\n};\n\nexport default Slottsskogen;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../popup.css\";\nimport \"../form.css\";\nimport \"../App.css\";\n\n\nconst Donso = () => {\n  const charactersData = useSelector((state) => state.characters);\n  const [fromDonso, setFromDonso] = useState([]);\n  useEffect(() => {\n    const results = charactersData.filter((item) =>\n      item.world.includes(\"Donsö\")\n    );\n    setFromDonso(results);\n  }, [charactersData]);\n  const outputCharacters = fromDonso.map((charItem) => (\n    <div className=\"character-item\" key={charItem.id}>\n      <div className=\"card-content\">\n        <div className=\"name-box\">\n          <div className=\"name\"> {charItem.name} </div>\n        </div>\n        <div className=\"world\">\n          <div className=\"world-text\">\n            {\" \"}\n            <span className=\"world-backs-card-col\">VÄRLD: </span>\n            {charItem.world}{\" \"}\n          </div>\n          <div className=\"world-pic\"> {charItem.pic} </div>\n        </div>\n        <div className=\"backstory\">\n          {\" \"}\n          <span className=\"world-backs-card-col\">BACKSTORY: </span>\n          {charItem.backstory}{\" \"}\n        </div>\n        <div className=\"iq\">INTELLIGENS:</div>\n        <input\n          readOnly\n          type=\"range\"\n          max=\"10\"\n          value={charItem.intelligence}\n        ></input>\n        <div className=\"power\"> STYRKA: </div>\n        <input readOnly type=\"range\" max=\"10\" value={charItem.strength}></input>\n        <div className=\"id\"> ID: {charItem.id} </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div className=\"border\">\n    <h1 className=\"Capital-Name\">Dons<span className=\"font-add-big\">ö</span></h1>\n    <div className=\"Capital-Pic\"></div>\n  <p className=\"Capital-Text\">\nÖn söder om hufvudstaden, du måste korsa det stormiga havet för att nå dit. \nÖn beskrivs ofta av utbölingar som kal, blåsig och ogästvänlig. Medan öborna \nsjälva beskriver ön som livets gåva till denna värld. Donsö bebos av stora släkter \nsom under många generationer styrt och härjat i den södra ö-världen. Donsöbon är härskare över hav och skärgård. \nSkaldjur, seglats och styrka är mottot som du måste behärska för att kunna överleva här.\n  </p>\n    <div className=\"container\">\n      <div className=\"persons\">{outputCharacters}</div>\n    </div>\n\n  </div>\n\n  );\n};\nexport default Donso;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"../popup.css\";\nimport \"../form.css\";\nimport \"../App.css\";\n\nconst Hisingen = () => {\n  const charactersData = useSelector((state) => state.characters);\n  const [fromHisingen, setFromHisingen] = useState([]);\n  useEffect(() => {\n    const results = charactersData.filter((item) =>\n      item.world.includes(\"Hisingen\")\n    );\n    setFromHisingen(results);\n  }, [charactersData]);\n  const outputCharacters = fromHisingen.map((charItem) => (\n    <div className=\"character-item\" key={charItem.id}>\n      <div className=\"card-content\">\n        <div className=\"name-box\">\n          <div className=\"name\"> {charItem.name} </div>\n        </div>\n        <div className=\"world\">\n          <div className=\"world-text\">\n            {\" \"}\n            <span className=\"world-backs-card-col\">VÄRLD: </span>\n            {charItem.world}{\" \"}\n          </div>\n          <div className=\"world-pic\"> {charItem.pic} </div>\n        </div>\n        <div className=\"backstory\">\n          {\" \"}\n          <span className=\"world-backs-card-col\">BACKSTORY: </span>\n          {charItem.backstory}{\" \"}\n        </div>\n        <div className=\"iq\">INTELLIGENS:</div>\n        <input\n          readOnly\n          type=\"range\"\n          max=\"10\"\n          value={charItem.intelligence}\n        ></input>\n        <div className=\"power\"> STYRKA: </div>\n        <input readOnly type=\"range\" max=\"10\" value={charItem.strength}></input>\n        <div className=\"id\"> ID: {charItem.id} </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div className=\"border\">\n    <h1 className=\"Capital-Name\">Hisingen</h1>\n    <div className=\"Capital-Pic\"></div>\n  <p className=\"Capital-Text\">\nÖn som är belägen väster om fastlandet, ett relativt lugnt hav måste korsas för att nå dit.\nÖn beskrivs nästan alltid och speciellt från hufvudstadsbor att de inte tillhör denna värld, \nett utryck som delvis funnits i alla tider men också mycket på grund av kriminalitetens fäste där ute. \nÖn består av mycket åkrar och en del skog, ön är även uppdelad i många små mörka samhällen. En varelse ska \nsällan eller aldrig färdas ensam när under sin vistelse här. Hisingsborna är luriga varelser med ett listigt \nsinne och förmåga att förföra den mest erfarne.\n  </p>\n    <div className=\"container\">\n      <div className=\"persons\">{outputCharacters}</div>\n    </div>\n\n  </div>\n  );\n};\nexport default Hisingen;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Start from \"./components/Start\";\nimport HeaderRedux from \"./components/HeaderRedux\";\nimport Characters from \"./components/Characters\";\nimport About from \"./components/About\";\nimport Hufvudstaden from \"./components/Hufvudstaden\";\nimport Slottsskogen from \"./components/Slottsskogen\";\nimport Donso from \"./components/Donso\";\nimport Hisingen from \"./components/Hisingen\";\n\nfunction App() {\n  const HOME = \"Start\",\n    HUFVUDSTADEN = \"Hufvudstaden\",\n    SLOTTSSKOGEN = \"Slottsskogen\",\n    DONSO = \"Donso\",\n    HISINGEN = \"Hisingen\",\n    CHARACTERS = \"Characters\",\n    ABOUT = \"About\";\n\n  const [currentScreen, setCurrentScreen] = useState(HOME);\n\n\n\n  let content = null;\n  switch (currentScreen) {\n    case HOME:\n      content = <Start />;\n      \n      break;\n    case HUFVUDSTADEN:\n      content = <Hufvudstaden />;\n      break;\n    case SLOTTSSKOGEN:\n      content = <Slottsskogen />;\n      break;\n    case DONSO:\n      content = <Donso />;\n      break;\n    case HISINGEN:\n      content = <Hisingen />;\n      break;\n    case CHARACTERS:\n      content = <Characters />;\n      break;\n    case ABOUT:\n      content = <About />;\n      break;\n    default:\n      content = <Start />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <HeaderRedux setScreenFromHeader={setCurrentScreen} />\n      </header>\n      <main>{content}</main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as idAdderReducer } from './idAdder';\nimport { reducer as charactersReducer } from './characters';\nimport { reducer as editCharacterReducer } from './editCharacter';\n\nconst rootReducer = combineReducers({\n    idAdder: idAdderReducer,\n    characters: charactersReducer,\n    editCharacter: editCharacterReducer\n})\n\nexport { rootReducer };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './features/rootReducer'\n\nconst store = configureStore({\n  reducer: rootReducer\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> <App /> </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}